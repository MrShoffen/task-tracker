networks:
  task-tracker-net:
    driver: bridge

include:
  - docker-compose-db.yml
  - docker-compose-kafka.yml
  - docker-compose-front.yml
  - docker-compose-obs.yml

services:
  config-server:
    container_name: config-server
    image: mrshoffen/task-tracker-config-server:latest
    networks:
      - task-tracker-net
    ports:
      - "8012:8012"
    env_file:
      - ./vars.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8012/actuator/health/readiness" ]
      interval: 5s
      timeout: 4s
      retries: 10
      start_period: 5s

  discovery-service:
    container_name: discovery-service
    image: mrshoffen/task-tracker-discovery-service:latest
    networks:
      - task-tracker-net
    ports:
      - "8015:8015"
    env_file:
      - ./vars.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8015/actuator/health/readiness" ]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s
    depends_on:
      config-server:
        condition: service_healthy

  user-profile-ws-1:
    container_name: user-profile-ws-1
    image: mrshoffen/task-tracker-user-profile:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-users:
        condition: service_started
      kafka-ui:
        condition: service_started

  user-profile-ws-2:
    container_name: user-profile-ws-2
    image: mrshoffen/task-tracker-user-profile:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-users:
        condition: service_started
      kafka-ui:
        condition: service_started

  workspace-manager-rs-1:
    container_name: workspace-manager-rs-1
    image: mrshoffen/task-tracker-workspace-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-workspace:
        condition: service_started
      kafka-ui:
        condition: service_started

  workspace-manager-rs-2:
    container_name: workspace-manager-rs-2
    image: mrshoffen/task-tracker-workspace-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-workspace:
        condition: service_started
      kafka-ui:
        condition: service_started

  workspace-manager-rs-3:
    container_name: workspace-manager-rs-3
    image: mrshoffen/task-tracker-workspace-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-workspace:
        condition: service_started
      kafka-ui:
        condition: service_started

  desk-manager-rs-1:
    container_name: desk-manager-rs-1
    image: mrshoffen/task-tracker-desk-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-desk:
        condition: service_started
      kafka-ui:
        condition: service_started

  desk-manager-rs-2:
    container_name: desk-manager-rs-2
    image: mrshoffen/task-tracker-desk-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-desk:
        condition: service_started
      kafka-ui:
        condition: service_started

  desk-manager-rs-3:
    container_name: desk-manager-rs-3
    image: mrshoffen/task-tracker-desk-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-desk:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-manager-rs-1:
    container_name: task-manager-rs-1
    image: mrshoffen/task-tracker-task-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-task:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-manager-rs-2:
    container_name: task-manager-rs-2
    image: mrshoffen/task-tracker-task-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-task:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-manager-rs-3:
    container_name: task-manager-rs-3
    image: mrshoffen/task-tracker-task-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-task:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-manager-rs-4:
    container_name: task-manager-rs-4
    image: mrshoffen/task-tracker-task-manager:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-task:
        condition: service_started
      kafka-ui:
        condition: service_started

  aggregator-rs-1:
    container_name: aggregator-rs-1
    image: mrshoffen/task-tracker-aggregator-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  aggregator-rs-2:
    container_name: aggregator-rs-2
    image: mrshoffen/task-tracker-aggregator-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  aggregator-rs-3:
    container_name: aggregator-rs-3
    image: mrshoffen/task-tracker-aggregator-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  user-permission-rs-1:
    container_name: user-permission-rs-1
    image: mrshoffen/task-tracker-user-permission-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-permission:
        condition: service_started
      kafka-ui:
        condition: service_started

  user-permission-rs-2:
    container_name: user-permission-rs-2
    image: mrshoffen/task-tracker-user-permission-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-permission:
        condition: service_started
      kafka-ui:
        condition: service_started

  user-permission-rs-3:
    container_name: user-permission-rs-3
    image: mrshoffen/task-tracker-user-permission-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-permission:
        condition: service_started
      kafka-ui:
        condition: service_started

  user-permission-rs-4:
    container_name: user-permission-rs-4
    image: mrshoffen/task-tracker-user-permission-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-permission:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-comments-rs-1:
    container_name: task-comments-rs-1
    image: mrshoffen/task-tracker-comments:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-comment:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-comments-rs-2:
    container_name: task-comments-rs-2
    image: mrshoffen/task-tracker-comments:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-comment:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-comments-rs-3:
    container_name: task-comments-rs-3
    image: mrshoffen/task-tracker-comments:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-comment:
        condition: service_started
      kafka-ui:
        condition: service_started


  task-sticker-rs-1:
    container_name: task-sticker-rs-1
    image: mrshoffen/task-tracker-stickers:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-sticker:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-sticker-rs-2:
    container_name: task-sticker-rs-2
    image: mrshoffen/task-tracker-stickers:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-sticker:
        condition: service_started
      kafka-ui:
        condition: service_started

  task-sticker-rs-3:
    container_name: task-sticker-rs-3
    image: mrshoffen/task-tracker-stickers:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-sticker:
        condition: service_started
      kafka-ui:
        condition: service_started



  task-realtime-service:
    container_name: task-realtime-service
    image: mrshoffen/task-tracker-realtime-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  authentication-service-1:
    container_name: authentication-service-1
    image: mrshoffen/task-tracker-authentication-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  authentication-service-2:
    container_name: authentication-service-2
    image: mrshoffen/task-tracker-authentication-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  authentication-service-3:
    container_name: authentication-service-3
    image: mrshoffen/task-tracker-authentication-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  mail-service:
    container_name: mail-service
    image: mrshoffen/task-tracker-mail-service:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  scheduler-1:
    container_name: scheduler-1
    image: mrshoffen/task-tracker-scheduler:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-scheduler:
        condition: service_started
      kafka-ui:
        condition: service_started

  scheduler-2:
    container_name: scheduler-2
    image: mrshoffen/task-tracker-scheduler:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-scheduler:
        condition: service_started
      kafka-ui:
        condition: service_started

  scheduler-3:
    container_name: scheduler-3
    image: mrshoffen/task-tracker-scheduler:latest
    networks:
      - task-tracker-net
    env_file:
      - ./vars.env
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres-scheduler:
        condition: service_started
      kafka-ui:
        condition: service_started


  load-balancer:
    image: nginx:latest
    container_name: load-balancer
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-cache:/var/cache/nginx
    networks:
      - task-tracker-net
    depends_on:
      - api-gateway-1
      - api-gateway-2
      - api-gateway-3

  api-gateway-1:
    container_name: api-gateway-1
    image: mrshoffen/task-tracker-api-gateway:latest
    networks:
      - task-tracker-net
#    ports:
#      - "8080:8080"
    env_file:
      - ./vars.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health/readiness" ]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s

  api-gateway-2:
    container_name: api-gateway-2
    image: mrshoffen/task-tracker-api-gateway:latest
    networks:
      - task-tracker-net
    #    ports:
    #      - "8080:8080"
    env_file:
      - ./vars.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health/readiness" ]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s


  api-gateway-3:
    container_name: api-gateway-3
    image: mrshoffen/task-tracker-api-gateway:latest
    networks:
      - task-tracker-net
    #    ports:
    #      - "8080:8080"
    env_file:
      - ./vars.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health/readiness" ]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s

